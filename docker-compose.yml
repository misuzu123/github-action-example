# Docker Compose file Reference (https://docs.docker.com/compose/compose-file/)
version: '3.9'
networks:
    backend:
        name: app
        driver: bridge
volumes:
    postgres-data:

services:
  db:
    image: postgres:15.3-alpine3.18
    container_name: postgres-db
    restart: always
    volumes:
        - postgres-data:/var/lib/postgresql/data
    networks:
        - backend
    ports:
        - "5434:5432"
    environment:
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: 1
        POSTGRES_DB: training-icario
        PGDATA: /var/lib/postgresql/data/pgdata
  zookeeper:
      image: confluentinc/cp-zookeeper:latest
      container_name: zookeeper-server
      environment:
          ZOOKEEPER_CLIENT_PORT: 2181
          ZOOKEEPER_TICK_TIME: 2000
      ports:
          - "22181:2181"
  kafka:
      image: confluentinc/cp-kafka:latest
      container_name: kafka-server
      depends_on:
          - zookeeper
      ports:
          - "9092:9092"
      environment:
          KAFKA_BROKER_ID: 1
          KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
          KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
          KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://192.168.195.80:9092
          KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
          KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
          KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
  training:
    image: training:latest
    container_name: training
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    depends_on:
        - db
        - kafka
    environment:
        - API-URL=http://192.168.195.80
        - PORT=9090
        - DB_USERNAME=postgres
        - DB_DATABASE=training-icario
        - DB_PORT=5434
        - DB_PASSWORD=1
        - DB_HOST=192.168.195.80
        - KAFKA_URL=192.168.195.80
        - KAFKA_PORT=9092
    ports:
      - "9090:9090"
    networks:
        - backend
